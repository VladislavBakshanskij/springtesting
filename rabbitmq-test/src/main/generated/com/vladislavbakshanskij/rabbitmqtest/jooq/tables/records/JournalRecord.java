/*
 * This file is generated by jOOQ.
 */
package com.vladislavbakshanskij.rabbitmqtest.jooq.tables.records;


import com.vladislavbakshanskij.rabbitmqtest.jooq.tables.Journal;

import java.time.OffsetDateTime;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.JSONB;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JournalRecord extends UpdatableRecordImpl<JournalRecord> implements Record5<UUID, String, String, JSONB, OffsetDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.journal.id</code>.
     */
    public JournalRecord setId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.journal.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.journal.action</code>.
     */
    public JournalRecord setAction(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.journal.action</code>.
     */
    public String getAction() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.journal.tableName</code>.
     */
    public JournalRecord setTablename(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.journal.tableName</code>.
     */
    public String getTablename() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.journal.objectState</code>.
     */
    public JournalRecord setObjectstate(JSONB value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.journal.objectState</code>.
     */
    public JSONB getObjectstate() {
        return (JSONB) get(3);
    }

    /**
     * Setter for <code>public.journal.update_date</code>.
     */
    public JournalRecord setUpdateDate(OffsetDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.journal.update_date</code>.
     */
    public OffsetDateTime getUpdateDate() {
        return (OffsetDateTime) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<UUID, String, String, JSONB, OffsetDateTime> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<UUID, String, String, JSONB, OffsetDateTime> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Journal.JOURNAL.ID;
    }

    @Override
    public Field<String> field2() {
        return Journal.JOURNAL.ACTION;
    }

    @Override
    public Field<String> field3() {
        return Journal.JOURNAL.TABLENAME;
    }

    @Override
    public Field<JSONB> field4() {
        return Journal.JOURNAL.OBJECTSTATE;
    }

    @Override
    public Field<OffsetDateTime> field5() {
        return Journal.JOURNAL.UPDATE_DATE;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getAction();
    }

    @Override
    public String component3() {
        return getTablename();
    }

    @Override
    public JSONB component4() {
        return getObjectstate();
    }

    @Override
    public OffsetDateTime component5() {
        return getUpdateDate();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getAction();
    }

    @Override
    public String value3() {
        return getTablename();
    }

    @Override
    public JSONB value4() {
        return getObjectstate();
    }

    @Override
    public OffsetDateTime value5() {
        return getUpdateDate();
    }

    @Override
    public JournalRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public JournalRecord value2(String value) {
        setAction(value);
        return this;
    }

    @Override
    public JournalRecord value3(String value) {
        setTablename(value);
        return this;
    }

    @Override
    public JournalRecord value4(JSONB value) {
        setObjectstate(value);
        return this;
    }

    @Override
    public JournalRecord value5(OffsetDateTime value) {
        setUpdateDate(value);
        return this;
    }

    @Override
    public JournalRecord values(UUID value1, String value2, String value3, JSONB value4, OffsetDateTime value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached JournalRecord
     */
    public JournalRecord() {
        super(Journal.JOURNAL);
    }

    /**
     * Create a detached, initialised JournalRecord
     */
    public JournalRecord(UUID id, String action, String tablename, JSONB objectstate, OffsetDateTime updateDate) {
        super(Journal.JOURNAL);

        setId(id);
        setAction(action);
        setTablename(tablename);
        setObjectstate(objectstate);
        setUpdateDate(updateDate);
    }
}
